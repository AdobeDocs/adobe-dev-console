{"version":3,"file":"component---src-pages-guides-authentication-api-key-integration-md-74aacf523c1e937d4705.js","mappings":"gNAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIY,cAJJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5BM,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAEMI,EAAc,CAClBN,aAAAA,GAEIO,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGT,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,uBAE5BA,EAAAA,EAAAA,KAAA,4JAAsJA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,KAAG,iBAAuB,8GAA8GX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,WAAqB,yIACxVX,EAAAA,EAAAA,KAAA,kHACAA,EAAAA,EAAAA,KAACJ,EAAW,CAACgB,MAAM,OAAOF,QAAQ,iBAClCV,EAAAA,EAAAA,KAAA,uNAAiNA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,MAAIX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,SAChP,KAAQ,uBAAqB,yBACS,SAASX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,MAAIX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,SACpF,KAAQ,gCAA8B,yCACgB,oBAC5DX,EAAAA,EAAAA,KAAA,uEAAiEA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,WAAqB,iBAC5GX,EAAAA,EAAAA,KAAA,MACE,GAAM,+BAA6B,gCAErCA,EAAAA,EAAAA,KAAA,MACE,GAAM,sDAAoD,wDAE5DA,EAAAA,EAAAA,KAAA,2KAAqKA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC/K,KAAQ,yBAAuB,iDACuB,SAASX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC7E,KAAQ,wBAAsB,qBACJ,OAC9BX,EAAAA,EAAAA,KAAA,4HACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,iEAA+D,mEAEvEA,EAAAA,EAAAA,KAAA,uGAAiGA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC3G,KAAQ,uCAAqC,0DACkB,MACnEX,EAAAA,EAAAA,KAAA,mHACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,mBAEvBA,EAAAA,EAAAA,KAAA,mFAA6EA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,YAA0B,kCACjIX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,iBAAe,8KAKhCX,EAAAA,EAAAA,KAAA,oCAA8BA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,UAAwB,MAAMX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,kBAAgC,wCAAwCX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,UAAoB,mBAClOX,EAAAA,EAAAA,KAAA,WAAK,yCACLA,EAAAA,EAAAA,KAAA,oBAAcA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAG,QAAkB,0JACtDX,EAAAA,EAAAA,KAAA,WAAK,wCAGT,CAEAI,EAAWS,gBAAiB,C","sources":["webpack://adobe-dev-console/./src/pages/guides/authentication/APIKeyIntegration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adobe-dev-console/adobe-dev-console/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"api-key-connection\"\n    }}>{`API Key Connection`}</h1>\n    <p>{`A small collection of Adobe services (e.g. Adobe Stock) require authorization, but do not require authentication. These services can be called `}<em parentName=\"p\">{`“anonymously”`}</em>{` and typically provide consistent results regardless of the application or user that made the request. An `}<strong parentName=\"p\">{`API Key`}</strong>{` is the only client credential required for these services. These connections do not need to pass an access token with each request.`}</p>\n    <p>{`To obtain an API Key, you'll need to create an API Key connection using the Adobe Developer Console.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If your application needs to access Adobe services or content on behalf of a user or an Adobe enterprise organization, it needs additional credentials for authentication. For more information, read the `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"OAuthIntegration.md\"\n        }}>{`OAuth Authentication`}</a></strong>{` and `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"ServiceAccountIntegration.md\"\n        }}>{`Service Account (JWT) Authentication`}</a></strong>{` documentation.`}</p>\n    <p>{`This article will walk you through the steps to set up an `}<strong parentName=\"p\">{`API Key`}</strong>{` connection.`}</p>\n    <h2 {...{\n      \"id\": \"api-key-connection-workflow\"\n    }}>{`API Key connection workflow`}</h2>\n    <h3 {...{\n      \"id\": \"step-1-create-a-project-in-adobe-developer-console\"\n    }}>{`Step 1: Create a project in Adobe Developer Console`}</h3>\n    <p>{`Integrations are now created as part of a \"project\" within Adobe Developer Console. For complete steps to creating a project in Console, begin by reading the `}<a parentName=\"p\" {...{\n        \"href\": \"../getting-started.md\"\n      }}>{`Adobe Developer Console getting started guide`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../projects/index.md\"\n      }}>{`projects overview`}</a>{`. `}</p>\n    <p>{`Once you have created a project, you will be able to add services including APIs, I/O Events, and I/O Runtime.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-add-an-api-to-your-project-using-api-key-authorization\"\n    }}>{`Step 2: Add an API to your project using API Key authorization`}</h3>\n    <p>{`To add an API that uses API Key authorization, follow the steps outlined in the guide for `}<a parentName=\"p\" {...{\n        \"href\": \"../services/services-add-api-key.md\"\n      }}>{`adding an API to a project using API Key authorization`}</a>{`.`}</p>\n    <p>{`When the API has been successfully connected, you will be able to access the newly generated API Key.`}</p>\n    <h3 {...{\n      \"id\": \"step-3-try-it\"\n    }}>{`Step 3: Try It`}</h3>\n    <p>{`Copy the API Key from the Adobe Developer Console project and replace `}<inlineCode parentName=\"p\">{`myAPIKey`}</inlineCode>{` in the sample request below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-curl\"\n      }}>{`curl 'https://stock.adobe.io/Rest/Media/1/Search/Files?locale=en_US%26search_parameters%5Bwords%5D=kittens '\n  -H 'x-api-key:myAPIKey'\n  -H 'x-product:myTestApp1.0'\n`}</code></pre>\n    <p>{`Open Postman and go to `}<inlineCode parentName=\"p\">{`Import`}</inlineCode>{`->`}<inlineCode parentName=\"p\">{`Paste Raw Text`}</inlineCode>{` and paste the curl command. Select `}<strong parentName=\"p\">{`Import`}</strong>{` to import it.`}</p>\n    <kbd>![api-key-5](./Images/api-key-5.png)</kbd>\n    <p>{`Select `}<strong parentName=\"p\">{`Send`}</strong>{`. You will receive a successful response. Note that you did not need an access token in order to make a successful request using API Key integration.`}</p>\n    <kbd>![api-key-7](./Images/api-key-7.png)</kbd>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}